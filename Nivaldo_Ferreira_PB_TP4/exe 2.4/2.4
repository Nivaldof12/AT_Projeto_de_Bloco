class TrieNode:
    def __init__(self):
        self.filhos = {}
        self.fim_da_palavra = False

class Trie:
    def __init__(self):
        self.raiz = TrieNode()

    def inserir(self, palavra):
        no = self.raiz
        for char in palavra:
            if char not in no.filhos:
                no.filhos[char] = TrieNode()
            no = no.filhos[char]
        no.fim_da_palavra = True

    def buscar(self, palavra):
        no = self.raiz
        for char in palavra:
            if char not in no.filhos:
                return False
            no = no.filhos[char]
        return no.fim_da_palavra

    def autocomplete(self, prefixo):
        no = self.raiz
        palavras = []

        for char in prefixo:
            if char not in no.filhos:
                return palavras
            no = no.filhos[char]

        self._buscar_palavras(no, prefixo, palavras)
        return palavras

    def _buscar_palavras(self, no, prefixo, palavras):
        if no.fim_da_palavra:
            palavras.append(prefixo)
        for char, filho in no.filhos.items():
            self._buscar_palavras(filho, prefixo + char, palavras)

    def remover(self, palavra):
        if not self.buscar(palavra):
            return False

        self._remover_recursivo(self.raiz, palavra, 0)
        return True

    def _remover_recursivo(self, no, palavra, index):
        if index == len(palavra):
            no.fim_da_palavra = False
            return len(no.filhos) == 0

        char = palavra[index]
        if char in no.filhos:
            filho = no.filhos[char]
            pode_remover = self._remover_recursivo(filho, palavra, index + 1)

            if pode_remover:
                del no.filhos[char]
                return len(no.filhos) == 0 and not no.fim_da_palavra
        return False

if __name__ == "__main__":
    trie = Trie()
    palavras = ["casa", "casamento", "casulo", "cachorro"]
    
    for palavra in palavras:
        trie.inserir(palavra)

    print("Autocomplete para 'cas':", trie.autocomplete("cas"))
    
    trie.remover("casa")
    
    print("Autocomplete para 'cas' após remoção de 'casa':", trie.autocomplete("cas"))
    print("Busca por 'casa' após remoção:", trie.buscar("casa"))
    print("Busca por 'casamento' após remoção:", trie.buscar("casamento"))
