class DNode:
    def __init__(self, valor):
        self.valor = valor
        self.proximo = None
        self.anterior = None

class DoublyLinkedList:
    def __init__(self):
        self.head = None

    def inserir_no_inicio(self, valor):
        novo_no = DNode(valor)
        if self.head:
            novo_no.proximo = self.head
            self.head.anterior = novo_no
        self.head = novo_no

    def inserir_no_fim(self, valor):
        novo_no = DNode(valor)
        if not self.head:
            self.head = novo_no
        else:
            atual = self.head
            while atual.proximo:
                atual = atual.proximo
            atual.proximo = novo_no
            novo_no.anterior = atual

    def excluir_na_posicao(self, pos):
        atual = self.head
        contador = 0
        while atual:
            if contador == pos:
                if atual.anterior:
                    atual.anterior.proximo = atual.proximo
                if atual.proximo:
                    atual.proximo.anterior = atual.anterior
                if atual == self.head:
                    self.head = atual.proximo
                return
            atual = atual.proximo
            contador += 1

    def exibir_lista_direta(self):
        atual = self.head
        elementos = []
        while atual:
            elementos.append(atual.valor)
            atual = atual.proximo
        print("Lista direta:", elementos)

    def exibir_lista_reversa(self):
        atual = self.head
        if not atual:
            return
        while atual.proximo:
            atual = atual.proximo
        elementos = []
        while atual:
            elementos.append(atual.valor)
            atual = atual.anterior
        print("Lista reversa:", elementos)

lista = DoublyLinkedList()
lista.inserir_no_inicio(10)
lista.inserir_no_inicio(20)
lista.inserir_no_fim(30)
lista.inserir_no_fim(40)
lista.exibir_lista_direta()
lista.exibir_lista_reversa()

lista.excluir_na_posicao(1)
lista.exibir_lista_direta()
