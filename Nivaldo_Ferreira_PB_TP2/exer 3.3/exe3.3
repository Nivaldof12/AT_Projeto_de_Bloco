class Node:
    def __init__(self, valor):
        self.valor = valor
        self.proximo = None

class LinkedList:
    def __init__(self):
        self.head = None

    def inserir_no_inicio(self, valor):
        novo_no = Node(valor)
        novo_no.proximo = self.head
        self.head = novo_no

    def inserir_no_fim(self, valor):
        novo_no = Node(valor)
        if not self.head:
            self.head = novo_no
        else:
            atual = self.head
            while atual.proximo:
                atual = atual.proximo
            atual.proximo = novo_no

    def buscar_posicao(self, valor):
        atual = self.head
        pos = 0
        while atual:
            if atual.valor == valor:
                return pos
            atual = atual.proximo
            pos += 1
        return -1

    def inverter_lista(self):
        anterior = None
        atual = self.head
        while atual:
            proximo = atual.proximo
            atual.proximo = anterior
            anterior = atual
            atual = proximo
        self.head = anterior

    def exibir_lista(self):
        atual = self.head
        elementos = []
        while atual:
            elementos.append(atual.valor)
            atual = atual.proximo
        print("Lista:", elementos)

lista = LinkedList()
lista.inserir_no_inicio(10)
lista.inserir_no_fim(20)
lista.inserir_no_fim(30)
lista.exibir_lista()

print("Posição do valor 20:", lista.buscar_posicao(20))
print("Posição do valor 40:", lista.buscar_posicao(40))

lista.inverter_lista()
lista.exibir_lista()
