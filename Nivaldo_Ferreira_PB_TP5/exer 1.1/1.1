import heapq

def dijkstra(grafo, origem):
    distancias = {vertice: float('inf') for vertice in grafo}
    distancias[origem] = 0
    fila = [(0, origem)]

    while fila:
        dist_atual, vertice_atual = heapq.heappop(fila)

        if dist_atual > distancias[vertice_atual]:
            continue

        for vizinho, peso in grafo[vertice_atual]:
            nova_dist = dist_atual + peso
            if nova_dist < distancias[vizinho]:
                distancias[vizinho] = nova_dist
                heapq.heappush(fila, (nova_dist, vizinho))

    return distancias

grafo = {
    'A': [('B', 1), ('C', 4)],
    'B': [('A', 1), ('C', 2), ('D', 5)],
    'C': [('A', 4), ('B', 2), ('D', 1)],
    'D': [('B', 5), ('C', 1)]
}

origem = 'A'
resultado = dijkstra(grafo, origem)
for vertice, distancia in resultado.items():
    print(f"Distância até {vertice}: {distancia}")
