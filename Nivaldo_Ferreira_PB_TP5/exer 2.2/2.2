import math

def distancia(cidade1, cidade2):
    return math.sqrt((cidade1[0] - cidade2[0])**2 + (cidade1[1] - cidade2[1])**2)

def caixeiro_viajante_vizinho_mais_proximo(cidades, cidade_inicial):

    nao_visitadas = list(cidades.keys())
    rota = [cidade_inicial]
    nao_visitadas.remove(cidade_inicial)
    cidade_atual = cidade_inicial

    while nao_visitadas:
        vizinho_mais_proximo = None
        menor_distancia = float('inf')

        for proxima_cidade in nao_visitadas:
            dist = distancia(cidades[cidade_atual], cidades[proxima_cidade])
            if dist < menor_distancia:
                menor_distancia = dist
                vizinho_mais_proximo = proxima_cidade

        rota.append(vizinho_mais_proximo)
        nao_visitadas.remove(vizinho_mais_proximo)
        cidade_atual = vizinho_mais_proximo

    return rota

cidades = {
    'A': (0, 0),
    'B': (1, 5),
    'C': (5, 2),
    'D': (6, 6),
    'E': (8, 3)
}

cidade_inicial = 'A'
rota_otimizada = caixeiro_viajante_vizinho_mais_proximo(cidades, cidade_inicial)

print("Rota otimizada:", " -> ".join(rota_otimizada))